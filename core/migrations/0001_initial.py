# Generated by Django 3.2.9 on 2021-12-07 06:55

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=10, verbose_name='Gender')),
                ('user_role_in_market', models.CharField(choices=[('Buyer', 'Buyer'), ('Producer', 'Producer'), ('Collecter', 'Collecter'), ('Transpoter', 'Transpoter')], default='Producer', max_length=15, verbose_name='User Role')),
                ('national_ID_Number', models.CharField(max_length=12, verbose_name='National ID Number')),
                ('Address', models.CharField(max_length=150, verbose_name='Nearest Location')),
                ('district', models.CharField(choices=[('Amp', 'Ampara'), ('Anu', 'Anuradhapura'), ('Bad', 'Badulla'), ('Bat', 'Batticaloa'), ('Col', 'Colombo'), ('Gal', 'Galle'), ('Gam', 'Gampaha'), ('Ham', 'Hambanthota'), ('Jaf', 'Jaffna'), ('Kal', 'Kaluthara'), ('Kan', 'Kandy'), ('Keg', 'Kegalle'), ('Kil', 'Kilinochchi'), ('Kur', 'Kurunagala'), ('Man', 'Mannar'), ('Mat', 'Matale'), ('Math', 'Mathara'), ('Mon', 'Monaragala'), ('Mul', 'Mullativu'), ('Nuw', 'Nuwara Eliya'), ('Pol', 'Polonnaruwa'), ('Put', 'Puttalam'), ('Rat', 'Rathnapura'), ('Tri', 'Trincomalee'), ('Vav', 'Vavuniya')], default='Colombo', max_length=150, verbose_name='District')),
                ('avatar', models.ImageField(blank=True, default='svg/avatar.svg', null=True, upload_to='User_avatars')),
                ('Whatsapp_number', models.CharField(max_length=12, verbose_name='Whatsapp Number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
